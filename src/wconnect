#!/usr/bin/perl
use strict;
use warnings;

my $wpaDriver = 'wext';
my $wpaConf = '/tmp/wpa_supplicant.conf';
my $lastSSIDFile = '/tmp/last-ssid';
my $winfoExec = 'winfo';
my $modeDefault = 'managed';
my @wifiModules = qw(iwldvm iwlwifi);

sub run(@);
sub reloadModule();
sub ifup($);
sub ifdown($);
sub iwconfig($$$$$);
sub connectWifi($$$$$$);
sub disconnectWifi($);
sub rfkillUnblockWlan();

my $usage = "Usage:
  $0 -h|--help
     show this message
  $0 SSID
     look up SSID with $winfoExec and use that enc method, key, and mode
     if SSID is not found in config files, check the last scan
     if the last scan has an unencrypted network with that name, connect to it
     using the ssid and mode from the scan
  $0 SSID none [mode]
     use no enc method or key {mode defaults to '$modeDefault'}
  $0 SSID wpa key [mode]
     use given WPA PSK/TKIP {mode defaults to '$modeDefault'}
  $0 SSID wep key [mode]
     use given WEP key {mode defaults to '$modeDefault'}
     note that ascii wep keys start with 's:', e.g.: s:APLEANDBANANA
  $0 -d
     disconnect
";

sub main(@){
  die $usage if(@_ == 1 and $_[0] =~ /^(-h|--help)$/);

  if(`whoami` ne "root\n"){
    print STDERR "rerunning as root...\n";
    exec "sudo", "$0", @_;
  }

  my $dev = `ifdev wlan`;
  chomp $dev;

  die $usage if @_ > 4;
  if(@_ == 1 and $_[0] eq '-d'){
    disconnectWifi $dev;
    exit 0;
  }
  my ($ssid, $encType, $key, $mode);
  if(@_ == 1){
    my $ssidArg = shift;
    my $winfo = `$winfoExec "$ssidArg"`;
    if($winfo =~ /ssid:(.*)\nenc:(.*)\nkey:(.*)\nmode:(.*)\nauto:(.*)\n/){
      ($ssid, $encType, $key, $mode) = ($1, $2, $3, $4);
      if($ssid ne $ssidArg){
        print "using '$ssid' instead of '$ssidArg'\n";
      }
    }else{
      $winfo = `$winfoExec --scanned "$ssidArg"`;
      if($winfo =~ /ssid:(.*)\nenc:(.*)\nmode:(.*)\n/){
        ($ssid, $encType, $mode) = ($1, $2, $3);
        if(lc $encType eq 'none'){
          print "found in last scan: $ssid enc=NONE mode=$mode\n";
          if($mode =~ /^(master)$/){
            print "changing mode $mode => managed\n";
            $mode = "managed";
          }
          exec $0, $ssid, "NONE", $mode;
        }
      }
      die "Unknown SSID: $ssidArg\n";
    }
  }elsif(@_ >= 2 and @_ <= 4){
    $ssid = shift;
    $encType = shift;
    $key = shift if $encType !~ /none/i;
    $mode = shift;
    die $usage if @_ > 0 or not defined $ssid or not defined $encType;

    $mode = $modeDefault if not defined $mode;

    $encType = lc $encType;
    if($encType eq 'none'){
      die $usage if defined $key;
    }elsif($encType =~ /^(wpa|wep)$/){
      die $usage if not defined $key;
    }else{
      die $usage;
    }
  }else{
    die $usage;
  }

  my $winfoDriver = `$winfoExec --att=driver`;
  if($winfoDriver =~ /([a-zA-Z0-9_-]+)/){
    $wpaDriver = $1;
  }

  disconnectWifi $dev;
  connectWifi $dev, $ssid, $encType, $key, $mode, $wpaDriver;
}

sub run(@){
  print "exec: @_\n";
  system @_;
}

sub reloadModule(){
  print "\n\nreloading modules as a workaround: @wifiModules\n";
  run "modprobe", "-r", @wifiModules;
  for my $mod(@wifiModules){
    run "modprobe", $mod;
  }
  run "sleep 0.5";
  print "\n\n";
}

sub ifup($){
  my $dev = shift;
  rfkillUnblockWlan();
  run "ifconfig", $dev, "up";
}
sub ifdown($){
  my $dev = shift;
  run "ifconfig", $dev, "down";
}

sub iwconfig($$$$$){
  my ($dev, $ssid, $key, $channel, $mode) = @_;
  if($mode =~ /ad-hoc/){
    ifdown $dev;
    reloadModule();
  }
  my @iwconfig = ("iwconfig", $dev,
    "essid", $ssid,
    "key", $key,
    "channel", $channel,
    "mode", $mode
  );
  print "\n\nrunning iwconfig while its down-\n";
  ifdown $dev;
  run @iwconfig;
  print "running iwconfig while its up-\n";
  ifup $dev;
  run @iwconfig;
  print "\n\n";
}

sub connectWifi($$$$$$){
  my ($dev, $ssid, $encType, $key, $mode, $driver) = @_;
  system "echo $ssid > $lastSSIDFile";
  if(lc $encType eq 'wpa'){
    my $conf = ''
      . "network={\n"
      . "  ssid=\"$ssid\"\n"
      . "  psk=\"$key\"\n"
      . "}\n"
    ;
    run "rm", $wpaConf;
    print "writing $wpaConf:\n$conf\n";
    open FH, "> $wpaConf" or die "Couldn't write $wpaConf: $!\n";
    print FH $conf;
    close FH;
    run "ifconfig", $dev, "up";
    run "wpa_supplicant", "-B", "-D$driver", "-i$dev", "-c$wpaConf";
    run "sleep", "1";
  }elsif(lc $encType eq 'wep'){
    iwconfig $dev, $ssid, $key, 'auto', $mode;
  }elsif(lc $encType eq 'none'){
    iwconfig $dev, $ssid, 'off', 'auto', $mode;
  }

  run "resolv";
  run "dhclient", "$dev";
}
sub disconnectWifi($){
  my $dev = shift;
  run "iwconfig", $dev, "essid", "";
  run "pkill", "-f", "^wpa_supplicant.*-i$dev.*\$";
  run "pkill", "-f", "^dhclient $dev\$";
  ifdown $dev;
}

sub rfkillUnblockWlan(){
  for my $rfkill(`ls -d1 /sys/class/rfkill/rfkill*`){
    chomp $rfkill;
    if(`cat $rfkill/type` eq "wlan\n"){
      run "echo 1 > $rfkill/state";
    }
  }
}

&main(@ARGV);
