#!/usr/bin/perl
use strict;
use warnings;

sub readIfconfigDevNames();
sub readWinfoDevMappings();

my $usage = "Usage:
  $0 DEV_TYPE [DEV_TYPE DEV_TYPE ...]
     finds a net device name matching one of the given <DEV_TYPE>s,
       using `winfo --att=dev` and `ifconfig -a`

     if winfo has a <DEV_TYPE>:<DEV_NAME> mapping for any of the given <DEV_TYPE>s,
       then print the first mapped device's <DEV_NAME>

     otherwise, print the first ifconfig device name that matches one of the below:
        <DEV_TYPE><number>                              -- (old sequential name)

        <DEV_TYPE>b<number>                             -- BCMA bus core number
        <DEV_TYPE>ccw<name>                             -- CCW bus group name
        <DEV_TYPE>o<index>[d<dev_port>]                 -- on-board device index number
        <DEV_TYPE>s<slot>[f<function>][d<dev_port>]     -- hotplug slot index number
        <DEV_TYPE>x<MAC>                                -- MAC address
        <DEV_TYPE>[P<domain>]p<bus>s<slot>[f<function>][d<dev_port>]
                                                        -- PCI geographical location
        <DEV_TYPE>[P<domain>]p<bus>s<slot>[f<function>][u<port>][..][c<config>][i<interface>]
                                                        -- USB port number chain

     DEV_TYPE and DEV_NAME can contain only letters, numbers, and underscores

     e.g.:
       if `winfo --att=dev` returns \"en:eth0,wl:wlan6\":
         then `$0 wlan wl eth` => print \"wlan6\"

       if `winfo --att=dev` returns \"\",
       and `ifconfig -a` has a line like \"wlan0: flags...\" in it
         then `$0 wl wlan` => print \"wlan0\"

       if `winfo --att=dev` returns \"\",
       and `ifconfig -a` has a line like \"wlp0s0: flags...\" in it
         then `$0 wlan wl` => print \"wlp0s0\"
";

sub main(@){
  my @devTypes = @_;
  die $usage if @devTypes == 0;
  for my $devType(@devTypes){
    die $usage if $devType !~ /^\w+$/;
  }

  my $winfoDevMappings = readWinfoDevMappings();
  for my $devType(@devTypes){
    if(defined $$winfoDevMappings{$devType}){
      my $devName = $$winfoDevMappings{$devType};
      print "$devName\n";
      exit 0;
    }
  }

  my $macRE = "[0-9a-f]{12}";

  my @ifconfigDevs = readIfconfigDevNames();
  for my $devType(@devTypes){
    for my $ifconfigDevName(@ifconfigDevs){
      if($ifconfigDevName =~ /
        ^ $devType
        ( \d+                                                     #old sequential
        | b\d+                                                    #BCMA bus core
        | ccw\w+                                                  #CCW bus group
        | o\d+    (d\d+)?                                         #on-board device
        | s\d+    (f\d+)? (d\d+)?                                 #hotplug slot
        | x$macRE                                                 #MAC address
        | (P\w+)? p\d+    s\d+    (f\w+)? (d\d+)?                 #PCI
        | (P\w+)? p\d+    s\d+    (f\w+)? (u\d+)* (c\d+)? (i\d+)? #USB port chain
        ) $
        /x){
        print "$ifconfigDevName\n";
        exit 0;
      }
    }
  }

  my $devNameFmt = join " or ", map {"'${_}#' or '${_}p#s#'"} @devTypes;
  die "No device named $devNameFmt found\n";
}

sub readIfconfigDevNames(){
  my @ifconfigDevNames;
  for my $line(`ifconfig -a`){
    if($line =~ /^(\w+):?/){
      my $ifconfigDevName = $1;
      push @ifconfigDevNames, $ifconfigDevName;
    }
  }
  return @ifconfigDevNames;
}

sub readWinfoDevMappings(){
  my $winfoDev = `winfo --att=dev`;
  chomp $winfoDev;
  $winfoDev =~ s/\s+//g;
  my @devPairs = split /,/, $winfoDev;
  my $winfoDevs = {};
  for my $pair(@devPairs){
    if($pair !~ /^(\w+):(\w+)$/){
      die "Malformed device pair in dev att {'prefix:device'}: '$pair'\n";
    }
    my ($devType, $devName) = ($1, $2);
    $$winfoDevs{$devType} = $devName;
  }
  return $winfoDevs;
}

&main(@ARGV);
