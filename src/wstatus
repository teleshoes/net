#!/usr/bin/perl
use strict;
use warnings;

my $STATUS_WLAN = "wlan";
my $STATUS_ETH = "eth";
my $STATUS_PPP = "ppp";
my $STATUS_WCONNECT = "wconnect";
my $STATUS_WAUTO = "wauto";
my $STATUS_TETHERING = "tethering";
my $STATUS_NONE = "none";

my $DEVICES_BY_STATUS = {
  $STATUS_WLAN => [qw(wl wlan)],
  $STATUS_ETH  => [qw(en eth)],
  $STATUS_PPP  => [qw(ppp)],
};

my $MODE_GET_STATUS = "get-status";
my $MODE_GET_SSID = "get-ssid";

my $usage = "Usage:
  $0 -h | --help
    show this message

  $0
    -use `ifdev`, `iwconfig`, and `ifconfig` to get the ACTIVE_NETWORK_DEVICE
    -check if any of RUNNING_PROCESS found for `wconnect`, `wauto`, `pppd`, `wvdial`
    -if ACTIVE_NETWORK_DEVICE found:
      -print one of: $STATUS_WLAN $STATUS_ETH $STATUS_PPP
    -if RUNNING_PROCESS found:
      -print one of: $STATUS_WCONNECT $STATUS_WAUTO $STATUS_TETHERING
    -otherwise:
      -print $STATUS_NONE

  $0 --ssid
    if STATUS is $STATUS_WLAN:
      extract SSID from `iwconfig` and print it
    otherwise:
      print nothing
";

sub getDevStatus();
sub isWconnect();
sub isWauto();
sub isTethering();

sub main(@){
  my $mode = $MODE_GET_STATUS;
  while(@_ > 0){
    my $arg = shift @_;
    if($arg =~ /^(-h|--help)$/){
      print $usage;
       exit 0;
    }elsif($arg =~ /^(--ssid)$/){
      $mode = $MODE_GET_SSID;
    }else{
      die "$usage\nERROR: unknown arg $arg\n";
    }
  }
  my ($device, $devStatus, $ssid) = getDevStatus();

  my $status = undef;
  $status = $devStatus        if not defined $status and defined $devStatus;
  $status = $STATUS_WCONNECT  if not defined $status and isWconnect();
  $status = $STATUS_WAUTO     if not defined $status and isWauto();
  $status = $STATUS_TETHERING if not defined $status and isTethering();
  $status = $STATUS_NONE      if not defined $status;

  if($mode eq $MODE_GET_STATUS){
    print "$status\n";
  }elsif($mode eq $MODE_GET_SSID){
    if($status eq $STATUS_WLAN and defined $ssid){
      print "$ssid\n";
    }
  }else{
    die "ERROR: unknown mode $mode\n";
  }
}

sub getDevStatus(){
  for my $devStatus(sort keys %$DEVICES_BY_STATUS){
    my @devs = @{$$DEVICES_BY_STATUS{$devStatus}};
    my $device = `ifdev @devs 2>/dev/null`;
    chomp $device;
    next if $device !~ /^\w+$/;
    my $ssid = undef;
    if($devStatus eq $STATUS_WLAN){
      my $iwconfig = `iwconfig $device | head -1`;
      if($iwconfig =~ /ESSID:off\/any\s*$/m){
        next; #ignore ifconfig for unassociated wlan dev
      }elsif($iwconfig =~ /ESSID:"(.+)"\s*$/m){
        $ssid = $1;
      }
    }
    if(`ifconfig $device` =~ /inet( addr)? \d+/){
      return ($device, $devStatus, $ssid);
    }
  }
  return (undef, undef, undef);
}

sub isWconnect(){
  system "pgrep wconnect > /dev/null 2>/dev/null";
  return $? == 0;
}

sub isWauto(){
  system "pgrep wauto > /dev/null 2>/dev/null";
  return $? == 0;
}

sub isTethering(){
  system "pidof pppd wvdial > /dev/null 2>/dev/null";
  return $? == 0;
}

&main(@ARGV);
